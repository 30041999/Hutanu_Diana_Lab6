<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Hutanu_Diana_Lab6"
        xmlns:AutoLotModel="clr-namespace:AutoLotModel;assembly=AutoLotModel" x:Class="Hutanu_Diana_Lab6.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" Loaded="Window_Loaded">
    <Window.Resources>
        <CollectionViewSource x:Key="customerViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoLotModel:Customer}, CreateList=True}"/>
        <CollectionViewSource x:Key="inventoryViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoLotModel:Inventory}, CreateList=True}"/>
        <CollectionViewSource x:Key="inventoryOrdersViewSource" Source="{Binding Orders, Source={StaticResource inventoryViewSource}}"/>
        <CollectionViewSource x:Key="customerOrdersViewSource" Source="{Binding Orders, Source={StaticResource customerViewSource}}"/>
        <ControlTemplate x:Key="validationTemplate">
            <DockPanel>
                <TextBlock Foreground="Red" FontSize="20">!</TextBlock>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>
            <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self},Path=(Validation.Errors)/ErrorContent}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
    </Window.Resources>
    <Grid DataContext="{StaticResource customerViewSource}">
        <TabControl x:Name="tbCtrlAutoLot" HorizontalAlignment="Left" Height="336" Margin="41,37,0,0" VerticalAlignment="Top" Width="711">
            <TabItem Header="Customers">
                <Grid Background="#FFE5E5E5" Margin="0,-5,-0.4,5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="52*"/>
                        <ColumnDefinition Width="301*"/>
                    </Grid.ColumnDefinitions>
                    <Grid x:Name="grid1" HorizontalAlignment="Left" Margin="151.256,183,0,0" VerticalAlignment="Top" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="30.09"/>
                            <ColumnDefinition Width="95.91"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Cust Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="custIdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="24" Margin="3.2,4,0,4" Grid.Row="0" Text="{Binding CustId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Grid.ColumnSpan="2" IsEnabled="False"/>
                        <Label Content="First Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="firstNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="24" Margin="3.2,4,0,4" Grid.Row="1" Text="{Binding FirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Grid.ColumnSpan="2" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                        <Label Content="Last Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="2" VerticalAlignment="Center"/>
                            <TextBox x:Name="lastNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="24" Margin="3.2,4,0,4" Grid.Row="2" Text="{Binding LastName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Grid.ColumnSpan="2" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>

                    </Grid>
                    <Button x:Name="btnNew" Content="New" HorizontalAlignment="Left" Height="23" Margin="24,33,0,0" VerticalAlignment="Top" Width="65" Click="btnNew_Click"/>
                    <Button x:Name="btnEdit" Content="Edit" HorizontalAlignment="Left" Height="24" Margin="24,79,0,0" VerticalAlignment="Top" Width="65" Click="btnEdit_Click"/>
                    <Button x:Name="btnDelete" Content="Delete" HorizontalAlignment="Left" Height="23" Margin="24,129,0,0" VerticalAlignment="Top" Width="65" Click="btnDelete_Click"/>
                    <Button x:Name="btnSave" Content="Save" HorizontalAlignment="Left" Height="21" Margin="24,219,0,0" VerticalAlignment="Top" Width="65" Click="btnSave_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="IsEnabled" Value="false" />
                                <Style.Triggers>
                                    <! —Butonul Save va fi inactiv daca exista erori de validare -->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=lastNameTextBox, Path=(Validation.HasError)}" Value="false" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="true" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button x:Name="btnCancel" Content="Cancel" HorizontalAlignment="Left" Height="20" Margin="24,259,0,0" VerticalAlignment="Top" Width="65" Click="btnCancel_Click"/>
                    <Button x:Name="btnPrev" Content="Previous" HorizontalAlignment="Left" Height="26" Margin="151.256,152,0,0" VerticalAlignment="Top" Width="69" Click="btnPrev_Click" Grid.Column="1"/>
                    <Button x:Name="btnNext" Content="Next" HorizontalAlignment="Left" Height="26" Margin="465.256,152,0,0" VerticalAlignment="Top" Width="64" Click="btnNext_Click" Grid.Column="1"/>
                    <DataGrid x:Name="customerDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="156.256,37,60,167" RowDetailsVisibilityMode="VisibleWhenSelected" Grid.Column="1">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="custIdColumn" Binding="{Binding CustId}" Header="Cust Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="firstNameColumn" Binding="{Binding FirstName}" Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="lastNameColumn" Binding="{Binding LastName}" Header="Last Name" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
            <TabItem Header="Inventory">
                <Grid Background="#FFE5E5E5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="13*"/>
                        <ColumnDefinition Width="16*"/>
                        <ColumnDefinition Width="18*"/>
                        <ColumnDefinition Width="658*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid x:Name="inventoryDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding Source={StaticResource inventoryViewSource}}" Margin="205.8,28,52.6,177" RowDetailsVisibilityMode="VisibleWhenSelected" Grid.Column="3">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="carIdColumn" Binding="{Binding CarId}" Header="Car Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="colorColumn" Binding="{Binding Color}" Header="Color" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="makeColumn" Binding="{Binding Make}" Header="Make" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid1" Grid.Column="3" DataContext="{StaticResource inventoryViewSource}" HorizontalAlignment="Left" Margin="205.8,165,0,0" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Car Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="carIdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding CarId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" IsEnabled="False"/>
                        <Label Content="Color:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="colorTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding Color, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Make:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="makeTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding Make, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                    </Grid>
                    <Button x:Name="btnNew" Grid.ColumnSpan="3" Content="New" Grid.Column="1" HorizontalAlignment="Left" Height="19" Margin="10.2,31,0,0" VerticalAlignment="Top" Width="60"/>
                    <Button x:Name="btnEdit" Grid.ColumnSpan="3" Content="Edit" HorizontalAlignment="Left" Height="22" Margin="10.2,73,0,0" VerticalAlignment="Top" Width="65" Grid.Column="1"/>
                    <Button x:Name="btnDelete" Grid.ColumnSpan="3" Content="Delete" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="10.2,119,0,0" VerticalAlignment="Top" Width="60"/>
                    <Button x:Name="btnSave" Grid.ColumnSpan="3" Content="Save" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="10.2,211,0,0" VerticalAlignment="Top" Width="62"/>
                    <Button x:Name="btnCancel" Grid.ColumnSpan="3" Content="Cancel" HorizontalAlignment="Left" Height="19" Margin="10.2,246,0,0" VerticalAlignment="Top" Width="65" Grid.Column="1"/>
                    <Button x:Name="btnPrev" Content="Previous" Grid.Column="3" HorizontalAlignment="Left" Height="23" Margin="205.8,131,0,0" VerticalAlignment="Top" Width="84"/>
                    <Button x:Name="btnNext" Content="Next" Grid.Column="3" HorizontalAlignment="Left" Height="18" Margin="515.8,136,0,0" VerticalAlignment="Top" Width="90"/>
                </Grid>
            </TabItem>
            <TabItem Header="Orders">
                <Grid Background="#FFE5E5E5">
                    <ComboBox x:Name="cmbCustomers" HorizontalAlignment="Left" Height="26" Margin="143,42,0,0" VerticalAlignment="Top" Width="131"/>
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0} {1}">
                                        <Binding Path="FirstName"/>
                                        <Binding Path="LastName"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                    </ComboBox>
                    <ComboBox x:Name="cmbInventory" HorizontalAlignment="Left" Height="26" Margin="421,42,0,0" VerticalAlignment="Top" Width="133"/>
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0} - {1}">
                                        <Binding Path="Make"/>
                                        <Binding Path="Color"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Label x:Name="lblCustomers" Content="Customers" HorizontalAlignment="Left" Height="23" Margin="146,14,0,0" VerticalAlignment="Top" Width="69"/>
                    <Label x:Name="lblInventory" Content="Inventory" HorizontalAlignment="Left" Height="23" Margin="421,14,0,0" VerticalAlignment="Top" Width="74"/>
                    <DataGrid x:Name="ordersDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" RowDetailsVisibilityMode="VisibleWhenSelected" IsSynchronizedWithCurrentItem="True">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="FirstNameColumn" Binding="{Binding FirstName}" Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="LastNameColumn" Binding="{Binding LastName}" Header="Last Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="MakeColumn" Binding="{Binding Make}" Header="Make" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="ColorColumn" Binding="{Binding Color}" Header="Color" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button x:Name="btnNew1" Content="New" HorizontalAlignment="Left" Height="23" Margin="13,14,0,0" VerticalAlignment="Top" Width="68" Click="btnNew1_Click"/>
                    <Button x:Name="btnEdit1" Content="Edit" HorizontalAlignment="Left" Height="26" Margin="13,50,0,0" VerticalAlignment="Top" Width="71" Click="btnEdit1_Click"/>
                    <Button x:Name="btnDelete1" Content="Delete" HorizontalAlignment="Left" Height="24" Margin="13,98,0,0" VerticalAlignment="Top" Width="71" Click="btnDelete1_Click"/>
                    <Button x:Name="btnSave1" Content="Save" HorizontalAlignment="Left" Height="24" Margin="13,173,0,0" VerticalAlignment="Top" Width="71" Click="btnSave1_Click"/>
                    <Button x:Name="btnCancel1" Content="Cancel" HorizontalAlignment="Left" Height="23" Margin="13,223,0,0" VerticalAlignment="Top" Width="71" Click="btnCancel1_Click"/>
                    <Button x:Name="btnPrev1" Content="Previous" HorizontalAlignment="Left" Height="28" Margin="144,218,0,0" VerticalAlignment="Top" Width="91" Click="btnPrev1_Click"/>
                    <Button x:Name="btnNext1" Content="Next" HorizontalAlignment="Left" Height="28" Margin="467,218,0,0" VerticalAlignment="Top" Width="79" Click="btnNext1_Click"/>
                </Grid>
            </TabItem>
        </TabControl>

    </Grid>
</Window>
